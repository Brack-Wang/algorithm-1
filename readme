算法描述

尝试使用C/C++ 使用描述（实现）一些算法，希望在此交流互相学习。
若你发现其中存在问题，可以随时联系本人。
e-mail：huangjunkun@gmail.com

欢迎交流，谢谢！

2.

/**
** 源文件： convex_hull.h, convex_hull.cpp
** 功能：凸包问题的解决方案, 蛮力法与分治法.
** 详细的算法可以参见<算法分析与设计> 3.蛮力法3.3.2凸包问题 & 4.分治法4.6.2凸包问题.
** 蛮力法使用到几何知识:
	P1，P2{(x1, y1), (x2, y2)} => ax + by = c 
	=> {a = y2-y1, b = x1 - x2, c = x1y2 - y1x2}
	使用公式ax + by = c可判断点P3(x3, y3)落在{(x1, y1), (x2, y2)}哪边.
	=> 循环遍历所有的点，找出所有像P1，P2的点，满足条件：
	其他所有的点均分布在直线P1P2同一边。
** 分治法使用到几何知识:
	{(x1, y1), (x2, y2), (x3, y3)} P1, P2, P3.面积S(P1P2P3)为以下行列式二分之一，
	|x1 y1 1|
	|x2 y2 1| = x1y2 + x3y1 + x2y3 - x3y2 - x2y1 - x1y3
	|x3 y3 1|
	P3位于直线P1P2的左侧时，该表达式为正值。
	P3位于直线P1P2的右侧时，该表达式为负值。
	=> 可以借助以上公式不断将点集合划分上包下包，以递归形式分治算法完成解决凸包问题。
	
** 算法实现详见以上源文件代码.
** 凸包问题描述:
	定理:任意包含n>2个点（不共线）的集合S的凸包是以S中的某些点为顶点的凸多边形。
	凸包问题是为一个n个点的集合构造凸包的问题。
	极点：对于任何一集合中的点为端点的线段来说，它们不是这种线段的中点。
** 作者：junkun huang  e-mail：huangjunkun@gmail.com
** 日期：2009-09-20 /
*/
1.

/**
** 源文件： random_list_node.h, random_list_node_test.cpp
** 功能：拷贝“随机链表”，即节点带有一个指针可能指向链表随机另一个节点的链表。
** 一般的简单蛮力算法，可完成该功能，但时间复杂度为 O(n*m)。而以下算法较高效，相比时间复杂度为O(m).
** 具体操作，需要遍历源链表三遍。包括拷贝链表+复制随机指针+回复源链表NEXT指针。
** 作者：junkun huang  e-mail：huangjunkun@gmail.com
** 日期：2011-06-10 /
*/
